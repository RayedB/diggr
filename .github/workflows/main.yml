name: CI CD

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - name: Start MongoDB
        run: docker-compose up --detach mongodb
      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn nx run-many --target=test --projects=api,frontend --parallel
      - run: yarn nx run-many --target=build --projects=api,frontend --parallel
  deploy-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn nx run-many --target=build --projects=frontend --parallel
      - name: deploy site to vercel      
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-args: '--prod' #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required 
  deploy-api:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [test]
    if: github.ref == 'refs/heads/main'
    env:
      IMAGE_NAME: diggr-api
      PROJECT_ID: diggr-staging
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.APP_GCP_SA_KEY }}'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - name: Build
        run: |
          yarn nx build
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build image and push to Artifact Registry
        run: |
          docker build -f ./packages/api/Dockerfile -t europe-west1-docker.pkg.dev/diggr-staging/diggr/api:latest .
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          docker push europe-west1-docker.pkg.dev/diggr-staging/diggr/api:latest
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          image: 'europe-west1-docker.pkg.dev/diggr-staging/diggr/api:latest'
          service: 'diggr-api'
          region: 'europe-west1'
          secrets: |
            MONGODB_URI=MONGODB_URI:1
      -
        name: Reroute trafic to new Revision
        run: gcloud run services update-traffic diggr-api --to-latest --region europe-west1



